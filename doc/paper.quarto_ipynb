{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: |\n",
        "  | Earnings Management and Investor Protection:\n",
        "  | Accounting Reading Group - Assignment III\\vspace{1cm}\n",
        "author:\n",
        "  - name: Melisa Mazaeva\n",
        "    email: melisa.mazaeva@student.hu-berlin.de\n",
        "    affiliations:\n",
        "      - Humboldt-Universität zu Berlin  \n",
        "date: today\n",
        "date-format: MMM D, YYYY [\\vspace{1cm}]\n",
        "abstract: |\n",
        "  | This project uses the TRR 266 Template for Reproducible Empirical Accounting Research (TREAT) to provide an infrastructure for open science-oriented empirical projects. Leveraging external Worldscope data sets on financial data, the repository showcases a reproducible workflow that integrates Python scripts for data analysis. The project’s output demonstrates a comprehensive application of skills to replicate and extend the findings from the seminal paper by Leuz, Nanda, and Wysocki (2003), particularly in providing descriptive statistics for the four individual earnings management measures as well as the aggregate earnings management score across various countries. In doing so, it documents and discusses the research design choices made and the variations between the original and reproduced results. This code base, adapted from TREAT, should give you an overview on how the template is supposed to be used for my specific project and how to structure a reproducible empirical project.\n",
        "  | \\vspace{6cm}\n",
        "bibliography: references.bib\n",
        "biblio-style: apsr\n",
        "format:\n",
        "  pdf:\n",
        "    documentclass: article\n",
        "    number-sections: true\n",
        "    toc: false\n",
        "fig_caption: yes\n",
        "fontsize: 11pt\n",
        "ident: yes\n",
        "always_allow_html: yes\n",
        "number-sections: true \n",
        "header-includes:\n",
        "  - \\usepackage[nolists]{endfloat}    \n",
        "  - \\usepackage{setspace}\\doublespacing\n",
        "  - \\setlength{\\parindent}{4em}\n",
        "  - \\setlength{\\parskip}{0em}\n",
        "  - \\usepackage[hang,flushmargin]{footmisc}\n",
        "  - \\usepackage{caption} \n",
        "  - \\captionsetup[table]{skip=24pt,font=bf}\n",
        "  - \\usepackage{array}\n",
        "  - \\usepackage{threeparttable}\n",
        "  - \\usepackage{adjustbox}\n",
        "  - \\usepackage{graphicx}\n",
        "  - \\usepackage{csquotes}\n",
        "  - \\usepackage{indentfirst}  # Added this line to ensure the first paragraph is indented for better readability\n",
        "  - \\usepackage[margin=1in]{geometry}\n",
        "---\n",
        "\n",
        "\n",
        "\\pagebreak\n",
        "\n",
        "\n",
        "During the preparation step, 8,265 firms and 20,521 firm-year observations (all due to second filtration step) were dropped, resulting in a final dataset with 18,040 firms and 123,469 firm-year observations. The differences in the numbers between the prepared dataset and the figures mentioned in the paper (70,955 firm-year observations and 8,616 non-financial firms) could be due to the assumptions such as variations in initial datasets, data updates, and filtering criteria listed in @sec-research_design_assumptions. However, the original study might have included additional data cleaning steps not explicitly mentioned, such as handling outliers, specific industry exclusions, or other criteria, which could affect the final counts.\n",
        "\n",
        "Now that it is clear that the number of observations for this project is significantly higher than that in @Leuz_2003 study, in order to illustrate the differences and compare the firm-year observations, Table 1 from @Leuz_2003 was partially replicated (only columns on countries and firm/year observations) to distinguish specific discrepancies that could arise for certain countries. The following table representes the (partially) replicated Table 1.\n"
      ],
      "id": "b4e41fe5"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: table1\n",
        "#| echo: false\n",
        "#| output: true\n",
        "\n",
        "import pandas as pd\n",
        "from utils import read_config, setup_logging\n",
        "\n",
        "log = setup_logging()\n",
        "\n",
        "def main():\n",
        "    log.info(\"Preparing data for analysis ...\")\n",
        "    cfg = read_config('config/prepare_data_cfg.yaml')\n",
        "\n",
        "    # Load the pulled data\n",
        "    wrds_data = pd.read_csv(cfg['worldscope_sample_save_path'])\n",
        "    initial_obs_count_pulled = len(wrds_data)\n",
        "    initial_firm_count_pulled = len(wrds_data['item6105'].unique())\n",
        "    log.info(f\"Initial number of observations after pulling data: {initial_obs_count_pulled}\")\n",
        "    log.info(f\"Initial number of firms after pulling data: {initial_firm_count_pulled}\")\n",
        "\n",
        "    # Check for duplicate firm-year observations\n",
        "    dup_obs = wrds_data[wrds_data.duplicated(subset=['item6105', 'year_'], keep=False)]\n",
        "    if not dup_obs.empty:\n",
        "        log.warning(f\"Found {dup_obs.shape[0]} duplicate firm-year observations. Removing duplicates.\")\n",
        "        wrds_data = wrds_data.drop_duplicates(subset=['item6105', 'year_'], keep='first')\n",
        "\n",
        "    # Filter countries with at least 300 firm-year observations for key accounting variables as in paper\n",
        "    filtered_countries_data, eliminated_countries = filter_countries(wrds_data)\n",
        "\n",
        "    # Print eliminated countries\n",
        "    if eliminated_countries:\n",
        "        log.info(f\"Countries eliminated after filtration: {', '.join(eliminated_countries)}\")\n",
        "    else:\n",
        "        log.info(\"No countries were eliminated after filtration.\")\n",
        "\n",
        "    # Filter firms with at least three consecutive years of income statement and balance sheet information as in paper\n",
        "    initial_firm_count = len(filtered_countries_data['item6105'].unique())\n",
        "    initial_obs_count = len(filtered_countries_data)\n",
        "    \n",
        "    filtered_firms_data = filter_firms(filtered_countries_data)\n",
        "\n",
        "    final_firm_count = len(filtered_firms_data['item6105'].unique())\n",
        "    final_obs_count = len(filtered_firms_data)\n",
        "\n",
        "    firms_dropped = initial_firm_count - final_firm_count\n",
        "    obs_dropped = initial_obs_count - final_obs_count\n",
        "\n",
        "    log.info(f\"Firms dropped after filtration: {firms_dropped}\")\n",
        "    log.info(f\"Firm-year observations dropped after filtration: {obs_dropped}\")\n",
        "\n",
        "    log.info(f\"Number of observations after preparation: {final_obs_count}\")\n",
        "    log.info(f\"Number of firms after preparation: {final_firm_count}\")\n",
        "\n",
        "    # Save the filtered dataset\n",
        "    filtered_firms_data.to_csv(cfg['prepared_data_save_path'], index=False)\n",
        "\n",
        "    log.info(\"Preparing data for analysis ... Done!\")\n",
        "\n",
        "    # Generate summary table for firm-year observations per country\n",
        "    summary_table = filtered_firms_data.groupby('item6026').size().reset_index(name='# Firm-years')\n",
        "    summary_table.columns = ['Country', '# Firm-years']\n",
        "    \n",
        "    # Compute mean, median, min, and max\n",
        "    summary_stats = summary_table['# Firm-years'].describe()[['mean', '50%', 'min', 'max']]\n",
        "    summary_stats.index = ['Mean', 'Median', 'Min', 'Max']\n",
        "    \n",
        "    # Display the summary table and stats\n",
        "    print(summary_table)\n",
        "    print(summary_stats)"
      ],
      "id": "table1",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Step 3: Analysis Implementation and Table Reproduction\n",
        "In this replication step, implement the calculations for the EM measures as described in the methodology of the paper, ensuring that all statistical methods and groupings are accurately replicated.\n",
        "\n",
        "\n",
        "\n",
        "\\pagebreak\n",
        "\n",
        "\\setcounter{table}{0}\n",
        "\\renewcommand{\\thetable}{\\arabic{table}}\n",
        "\n",
        "# References {-}\n",
        "\\setlength{\\parindent}{-0.2in}\n",
        "\\setlength{\\leftskip}{0.2in}\n",
        "\\setlength{\\parskip}{8pt}\n",
        "\\noindent"
      ],
      "id": "57f8d648"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/melissam/Library/Python/3.12/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}